(()=>{"use strict";const e="a97f91dc3154744c7757bda7928c308f";async function t(e){const t=document.getElementById("weather-container"),a=document.getElementById("searchbar");e.then((function(e){if(!e)return;if(t.querySelector("#weather-card")){const e=t.querySelector("#weather-card");t.removeChild(e)}const c=function(e){const t=document.createElement("div");t.setAttribute("id","weather-card");const a=document.createElement("div");a.classList.add("weather-card-header");const c=document.createElement("h2"),d=document.createElement("p");d.textContent="°C",d.classList.add("active");const s=document.createElement("p");s.textContent="/";const o=document.createElement("p");o.textContent="°F";const i=document.createElement("div");i.classList.add("temp-toggle"),i.appendChild(d),i.appendChild(s),i.appendChild(o),i.addEventListener("click",(()=>{if(d.classList.contains("active")){d.classList.remove("active"),o.classList.add("active");const t=n(e.temp.toFixed());l.textContent=` Temperature: ${t}°F`;const a=n(e.temp_feels_like.toFixed());m.textContent=`Feels like: ${a}°F`}else o.classList.contains("active")&&(o.classList.remove("active"),d.classList.add("active"),l.textContent=`Temperature: ${e.temp.toFixed()}°C`,m.textContent=`Feels like: ${e.temp_feels_like.toFixed()}°C`)}));const r=document.createElement("p");r.classList.add("capitalize");const l=document.createElement("p"),m=document.createElement("p");m.setAttribute("id","temp-feels-like");const u=document.createElement("p"),p=document.createElement("p");return c.textContent=`${e.city}`,r.textContent=`${e.desc}`,l.textContent=` Temperature: ${e.temp.toFixed()}°C`,m.textContent=`Feels like: ${e.temp_feels_like.toFixed()}°C`,u.textContent=`Humidity: ${e.humidity}%`,p.textContent=`Wind: ${e.wind} m/s`,"clear sky"===(y=e.desc)&&(document.body.style.backgroundImage="url('assets/clearsky.jpg')"),y.includes("clouds")&&(document.body.style.backgroundImage="url('assets/clouds.jpg')"),y.includes("rain")&&(document.body.style.backgroundImage="url('assets/rain.jpg')"),y.includes("snow")&&(document.body.style.backgroundImage="url('assets/snow.jpg')"),"mist"===y&&(document.body.style.backgroundImage="url('assets/mist.jpg')"),"thunderstorm"===y&&(document.body.style.backgroundImage="url('assets/thunderstorm.jpg')"),a.appendChild(c),a.appendChild(i),t.appendChild(a),t.appendChild(r),t.appendChild(l),t.appendChild(m),t.appendChild(u),t.appendChild(p),t;var y}(e);t.appendChild(c),a.value=""}))}function n(e){return 9*e/5+32}async function a(t){const n=`https://api.openweathermap.org/data/2.5/weather?q=${t}&units=metric&APPID=${e}`,a=await fetch(n,{mode:"cors"});try{const e=await a.json();return{city:e.name,desc:e.weather[0].description,temp:e.main.temp,temp_feels_like:e.main.feels_like,humidity:e.main.humidity,wind:e.wind.speed}}catch(e){return void function(){const e=document.getElementById("searchbar"),t=document.getElementById("error-message");""===e.value.trim()?(t.style.backgroundColor="rgba(0, 0, 0, 0.7)",t.textContent="Please enter a city name!"):(t.style.backgroundColor="rgba(0, 0, 0, 0.7)",t.textContent="Location was not found"),setTimeout((function(){t.textContent="",t.style.backgroundColor="transparent",console.clear()}),2500)}()}}const c=document.getElementById("searchbar"),d=document.getElementById("search-button");document.addEventListener("DOMContentLoaded",(()=>{t(a("Antalya"))})),d.addEventListener("click",(()=>{t(a(c.value))})),c.addEventListener("keypress",(e=>{"Enter"===e.key&&t(a(c.value))}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,