(()=>{"use strict";const e="a97f91dc3154744c7757bda7928c308f";async function t(e){const t=document.getElementById("weather-container"),a=document.getElementById("searchbar");e.then((function(e){if(!e)return;if(t.querySelector("#weather-card")){const e=t.querySelector("#weather-card");t.removeChild(e)}const s=function(e){const t=document.createElement("div");t.setAttribute("id","weather-card");const a=document.createElement("div");a.classList.add("weather-card-header");const s=document.createElement("h1");s.classList.add("city-title");const d=document.createElement("p");d.textContent="°C",d.classList.add("active");const c=document.createElement("p");c.textContent="/";const o=document.createElement("p");o.textContent="°F";const i=document.createElement("div");i.classList.add("temp-toggle"),i.appendChild(d),i.appendChild(c),i.appendChild(o),i.addEventListener("click",(()=>{if(d.classList.contains("active")){d.classList.remove("active"),o.classList.add("active");const t=n(e.temp.toFixed());l.textContent=` Temperature: ${t}°F`;const a=n(e.temp_feels_like.toFixed());m.textContent=`Feels like: ${a}°F`}else o.classList.contains("active")&&(o.classList.remove("active"),d.classList.add("active"),l.textContent=`Temperature: ${e.temp.toFixed()}°C`,m.textContent=`Feels like: ${e.temp_feels_like.toFixed()}°C`)}));const r=document.createElement("h2");r.classList.add("capitalize"),r.classList.add("weather-info");const l=document.createElement("h2");l.classList.add("weather-info");const m=document.createElement("h2");m.setAttribute("id","temp-feels-like"),m.classList.add("weather-info");const u=document.createElement("h2");u.classList.add("weather-info");const p=document.createElement("h2");return p.classList.add("weather-info"),s.textContent=`${e.city}`,r.textContent=`${e.desc}`,l.textContent=` Temperature: ${e.temp.toFixed()}°C`,m.textContent=`Feels like: ${e.temp_feels_like.toFixed()}°C`,u.textContent=`Humidity: ${e.humidity}%`,p.textContent=`Wind: ${e.wind} m/s`,"clear sky"===(h=e.desc)&&(document.body.style.backgroundImage="url('assets/clearsky.jpg')"),h.includes("clouds")&&(document.body.style.backgroundImage="url('assets/clouds.jpg')"),h.includes("rain")&&(document.body.style.backgroundImage="url('assets/rain.jpg')"),h.includes("snow")&&(document.body.style.backgroundImage="url('assets/snow.jpg')"),"mist"===h&&(document.body.style.backgroundImage="url('assets/mist.jpg')"),"thunderstorm"===h&&(document.body.style.backgroundImage="url('assets/thunderstorm.jpg')"),a.appendChild(s),a.appendChild(i),t.appendChild(a),t.appendChild(r),t.appendChild(l),t.appendChild(m),t.appendChild(u),t.appendChild(p),t;var h}(e);t.appendChild(s),a.value=""}))}function n(e){return 9*e/5+32}async function a(t){const n=`https://api.openweathermap.org/data/2.5/weather?q=${t}&units=metric&APPID=${e}`,a=await fetch(n,{mode:"cors"});try{const e=await a.json();return{city:e.name,desc:e.weather[0].description,temp:e.main.temp,temp_feels_like:e.main.feels_like,humidity:e.main.humidity,wind:e.wind.speed}}catch(e){return void function(){const e=document.getElementById("searchbar"),t=document.getElementById("error-message");""===e.value.trim()?(t.style.backgroundColor="rgba(0, 0, 0, 0.7)",t.textContent="Please enter a city name!"):(t.style.backgroundColor="rgba(0, 0, 0, 0.7)",t.textContent="Location was not found"),setTimeout((function(){t.textContent="",t.style.backgroundColor="transparent",console.clear()}),2500)}()}}const s=document.getElementById("searchbar"),d=document.getElementById("search-button");document.addEventListener("DOMContentLoaded",(()=>{t(a("Ortahisar"))})),d.addEventListener("click",(()=>{t(a(s.value))})),s.addEventListener("keypress",(e=>{"Enter"===e.key&&t(a(s.value))}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,